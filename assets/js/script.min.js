function genSiteMap() {
    $(document).ready(function(){
        if (location.hostname == "jas.bss.design") {
            // console.log("ths is the bss site");
            var siteMapLoc = 'https://jas.bss.design/sitemap.xml',
                siteDomain = 'https://jas.bss.design/'
        } else if (location.hostname == "sallen-wiley.github.io") {
            // console.log("ths is the git pages site");
            var siteMapLoc = 'https://sallen-wiley.github.io/jas/sitemap.xml',
                siteDomain = 'https://sallen-wiley.github.io/jas/'
        };
        $.get(siteMapLoc, function(d){
            // alert( "Load was performed." );
            $(d).find('loc').each(function(){
                var $page = $(this);
                var sitemapElement = document.getElementById("sitemap");
                var linkUrl = $page.text(),
                    linkUrl = linkUrl.replace('https://jas.bss.design/',siteDomain),
                    removeDomain = linkUrl.replace(siteDomain,''),
                    removeType = removeDomain.replace('.html',''),
                    primaryNode = removeType.substring(0, removeType.indexOf("/")),
                    primaryNodeElement = document.getElementById(primaryNode),
                    linkText = removeType;
                // create link node
                var linkDiv = document.createElement("div");
                var linkElement = document.createElement("a");
                var linkString = document.createTextNode(linkText);
                linkElement.href=linkUrl
                linkElement.appendChild(linkString);
                linkDiv.appendChild(linkElement);
                
                // check if the primary node has a container and heading
                // if it exists, append the link to the container else create the container and heading and then add the link
                if (primaryNodeElement) {
                    // append link
                    primaryNodeElement.appendChild(linkDiv);
                } else {
                    // create section container
                    var linkSection = document.createElement("div");
                    linkSection.id = primaryNode;
                    linkSection.classList.add("mb-3");
                    sitemapElement.appendChild(linkSection);
                    // creating section heading
                    var headingElement = document.createElement("h3");
                    var headingText = document.createTextNode(primaryNode);
                    headingElement.appendChild(headingText);
                    // append heading
                    linkSection.appendChild(headingElement);
                    // append link
                    linkSection.appendChild(linkDiv);
                }
            });
        });
    });    
}
function ulFilter() {
  // Declare variables
  var input, filter, ul, li, a, i, txtValue;
  input = document.getElementById('filter-input');
  filter = input.value.toUpperCase();
  ul = document.getElementById("filter-list");
  li = ul.getElementsByTagName('li');

  // Loop through all list items, and hide those who don't match the search query
  for (i = 0; i < li.length; i++) {
    a = li[i].getElementsByTagName("a")[0];
    txtValue = a.id;
    if (txtValue.toUpperCase().indexOf(filter) > -1) {
      li[i].style.display = "";
    } else {
      li[i].style.display = "none";
    }
  }
}

// document.getElementById('filter-input').onkeyup = function(){ulFilter()};
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();
// open the menu

function toggleClassMenu() {
	myMenu.classList.add("menu--animatable");	
	if(!myMenu.classList.contains("menu--visible")) {		
		myMenu.classList.add("menu--visible");
	} else {
		myMenu.classList.remove('menu--visible');		
	}	
}

function OnTransitionEnd() {
	myMenu.classList.remove("menu--animatable");
}

var myMenu = document.querySelector(".menu");
var oppMenu = document.querySelector(".menu-icon");
if(myMenu) {
    myMenu.addEventListener("transitionend", OnTransitionEnd, false);
    oppMenu.addEventListener("click", toggleClassMenu, false);
    myMenu.addEventListener("click", toggleClassMenu, false);
}

// toggle the panel in the menu

function togglePanel() {
    event.stopPropagation()
	if(!menuContent.classList.contains("show-panels")) {		
		menuContent.classList.add("show-panels");
	} else {
		menuContent.classList.remove('show-panels');		
	}	
}

var menuContent = document.querySelector(".menu-content");
if(menuContent) {
    menuContent.addEventListener("click", togglePanel, false);
}
{
"name": "MyApp",
"short_name": "MyApp",
"description": "MyApp description",
"version": "0.0.0.1",
"manifest_version": 2,
"default_locale": "en-GB",
"author": "Christopher Dean",
"start_url": "Home.aspx",
"display": "standalone",
"orientation": "landscape",
"theme_color": "#015174",
"background_color": "#F7F4F3",
"icons": [
{
  "src": "images/app-icon-chrome.png",
  "sizes": "128x128",
  "type": "image/png"
},
{
  "src": "images/app-icon-tiny.png",
  "sizes": "32x32",
  "type": "image/png"
},
{
  "src": "images/app-icon-192.png",
  "sizes": "192x192",
  "type": "image/png"
},
{
  "src": "images/app-icon-512.png",
  "sizes": "512x512",
  "type": "image/png"
}
],
"app": {
 "urls": [
   "http://MyApp/Home.aspx"
 ],
 "launch": {
   "web_url": "http://MyApp/"
 },
 "background": {
   "scripts": [ "chrome.js" ]
 },
 "permissions": [ 
  "unlimitedStorage",
  "notifications",
  "fullscreen"
 ]
}
}
// show modal on load
$(window).on('load',function(){
    $('.show-modal-on-load').modal('show');
});
        (function(document,navigator,standalone) {
            // prevents links from apps from oppening in mobile safari
            // this javascript must be the first script in your <head>
            if ((standalone in navigator) && navigator[standalone]) {
                var curnode, location=document.location, stop=/^(a|html)$/i;
                document.addEventListener('click', function(e) {
                    curnode=e.target;
                    while (!(stop).test(curnode.nodeName)) {
                        curnode=curnode.parentNode;
                    }
                    // Condidions to do this only on links to your own app
                    // if you want all links, use if('href' in curnode) instead.
                    if('href' in curnode && ( curnode.href.indexOf('http') || ~curnode.href.indexOf(location.host) ) ) {
                        e.preventDefault();
                        location.href = curnode.href;
                    }
                },false);
            }
        })(document,window.navigator,'standalone');